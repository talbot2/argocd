name: AKS Create

env:
  resourceGroup: 'argocd-demo-rg'
  location: 'westeurope'
  name: 'argocd-main-aks'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

        
    - name: Resource Group Creation
      uses: Azure/cli@v1
      with:
        inlineScript: az group create -l ${{ env.location }} -n ${{ env.resourceGroup }} 

                      
    - name: AKS Creation
      uses: Azure/cli@v1
      with:
        inlineScript: az aks create -g ${{ env.resourceGroup }} -n ${{ env.name }} -k 1.26.3 --generate-ssh-keys


    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ env.resourceGroup }}' 
        cluster-name: '${{ env.name }}'


    - name: Install arkade
      uses: alexellis/setup-arkade@v3
    - uses: alexellis/arkade-get@master
      with:
        kubectl: latest
        helm: latest
        vcluster: latest
        argocd: latest


    - name: Install Argo CD Agent
      run: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
        sleep 60s
        argocd account update-password --account admin --new password Argopass1234.


    - name: Argo CD Login Details
      run: |
        kubectl get service argocd-server -n argocd
        kubectl get -n argocd secret/argocd-initial-admin-secret -ogo-template='{{printf "Username: admin\nPassword: %s\n" (.data.password | base64decode)}}'
