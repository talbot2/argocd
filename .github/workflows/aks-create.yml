name: AKS-Create

env:
  resourceGroup: 'argocd-demo-rg'
  location: 'westeurope'
  name: 'argocd-main-aks'

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
        enable-AzPSSession: true 

        
    - name: Resource Group Creation
      uses: Azure/cli@v1
      with:
        inlineScript: az group create -l ${{ env.location }} -n ${{ env.resourceGroup }} 

                      
    - name: AKS Creation
      uses: Azure/cli@v1
      with:
        inlineScript: az aks create -g ${{ env.resourceGroup }} -n ${{ env.name }} -k 1.26.3 --generate-ssh-keys


    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ env.resourceGroup }}' 
        cluster-name: '${{ env.name }}'


    - name: Install Kubectl
      uses: Azure/cli@v1
      with:
        inlineScript: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

        
    #- name: Kubectl Installer
    #  uses: Azure/setup-kubectl@v3
    #  with:
    #    version: default


    - name: Kubectl Get Pods
      uses: Azure/cli@v1
      with:
        inlineScript: kubectl get pods -n all-namespaces
