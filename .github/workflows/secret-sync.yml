name: Kubectl Get Pods

env:
  resourceGroup: 'argocd-demo-rg'
  name: 'argocd-main-aks'
  
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          enable-AzPSSession: false


      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ env.resourceGroup }}' 
          cluster-name: '${{ env.name }}'


      - name: Kubectl Get Pods
        run: |
          kubectl get pods -n argocd


      - name: Create GitHub Secret Action Username
        uses: gliech/create-github-secret-action@v1.4.10
        with:
          name: argo-username
          value: admin
          pa_token: '${{ secrets.ARGO_USERNAME }}'


      - name: Create GitHub Secret Action Password
        uses: gliech/create-github-secret-action@v1.4.10
        with:
          name: argo-password
          value: admin
          pa_token: '${{ secrets.ARGO_PASSWORD }}'


      - name: Create GitHub Secret Action IP Address
        uses: gliech/create-github-secret-action@v1.4.10
        with:
          name: argo-ip
          value: admin
          pa_token: '${{ secrets.ARGO_IP }}'


      - name: Check Secrets
        run: |
          echo "${{ secrets.ARGO_USERNAME }}\n"
          echo "${{ secrets.ARGO_PASSWORD }}\n"
          echo "${{ secrets.ARGO_IP }}\n"
